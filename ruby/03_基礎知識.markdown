Ruby 基礎
====================================================================

Hello World!
--------------------------------------------------------------------

 プログラムの勉強を始める時によく使われる Hello World という単純なプログラムがあります。
 プログラム自体はとても短く単純です

 ```ruby
  puts "Hello World"
 ```

 これは Hello World という文字を画面に表示するだけの単純なプログラムです。
 puts というメソッドに渡された文字が画面に表示されます。
 Ruby でこのプログラムを実行する3つの方法を紹介します。

 1. コマンドラインに下記コマンドを入力してみましょう

   ```shell
    $ ruby -e 'puts "Hello World"'
   ```

 2. 次にファイルに下記プログラムを入力し hello.rb という名前で保存し実行してみましょう

  ```shell
   $ ruby hello.rb
  ```

 3. 最後に下記コマンドを実行してからプログラムを入力してみましょう

  ```shell
   $ irb
   irb(main):001:0> puts "Hello World"
  ```

それぞれ Hello World と表示されましたか？

 1. は「ワンライナー」と呼ばれる方法です。1行でかけるようなプログラムを簡単に実行したい時に使います。
 2. はファイルに保存されたプログラムを実行する方法です。通常はこの方法を使用します。
 3. は Ruby に付属される irb という ruby のプログラムを標準入力から簡単に実行するためのツールです。デバッグなどの時に使います。

これ以降のプログラムは **2** を使用して実行していきます。


文字列
--------------------------------------------------------------------

 1. Hello World のプログラムで入力したような ""(ダブルクォーテーション)で囲まれたものは文字列と呼ばれます。
 2. 文字列の中にダブルクォーテーションを含めたい場合は\(バックスラッシュ)をダブルクォーテーションの直前に置く事により可能です。
    このような行為をエスケープと呼びます。

    ```ruby
    puts "Hello World!"
    puts "Hello \"World!\""
    ```

四則演算
--------------------------------------------------------------------

 1. プログラムで計算してみましょう。

 ```ruby
 puts 1 + 1
 ```

 正しい答は出ましたか？


 2. ruby では四則演算の演算子は下記のようになります

   * 加算 +
   * 減算 -
   * 乗算 *
   * 除算 /

 3. もう少し複雑な計算をさせてみましょう

 ```ruby
 puts 2 + 3 * 3
 ```

 このプログラムでは四則演算のルールに従って乗算と除算が優先的に計算されます。
 加算や減算を優先させて計算させたい場合は優先させたい部分を()でかこみます

 ```ruby
 puts (2 + 3) * 3
 ```

変数
--------------------------------------------------------------------

 1. 計算した結果を保持したい場合は変数に入れましょう

 ```ruby
 value = 1 + 1
 puts value
 ```

 `value` が変数と呼ばれるものです。
 プログラムの `=` は数学の `=` とは違い左右の等価を表すものではありません。
 右の結果を左に入れるこのような行為を **代入** と呼びます。

 変数名にはルールがあり**小文字の英字か"_"(アンダーバー)で始まる**事が決められています。

 正しい変数名
 
  * aaa
  * aa1
  * a_1

 間違った変数名

  * 1aa
  * 111

条件分岐
--------------------------------------------------------------------

 特定の条件の時にのみ処理を実行したい場合などは`if`文を使用します

 ```ruby
 value = 1 + 1

 if value == 2
   puts "正解"
 else
   puts "不正解"
 end
 ```
 























